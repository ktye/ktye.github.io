//print instructions as text

let pc,rs=["r0","r1","r2","r3","r4","fp","sp","pc"],dtab=[
 [0177777, 0000244, "clz", "", 0],  [0177777, 0000264, "sez", "", 0],
 [0077700, 0005000, "clr", "d", 1], [0077700, 0005100, "com", "d", 1], [0077700, 0005200, "inc", "d", 1],
 [0077700, 0005300, "dec", "d", 1], [0077700, 0005400, "neg", "d", 1], [0077700, 0005700, "tst", "d", 1],
 [0077700, 0006200, "asr", "d", 1], [0077700, 0006300, "asl", "d", 1], [0077700, 0006000, "ror", "d", 1],
 [0077700, 0006100, "rol", "d", 1], [0177700, 0000300, "swab","d", 0], [0077700, 0005500, "adc", "d", 1],
 [0077700, 0005600, "sbc", "d", 1], [0177700, 0006700, "sxt", "d", 0], [0070000, 0010000, "mov", "sd",1],
 [0070000, 0020000, "cmp", "sd",1], [0170000, 0060000, "add", "sd",0], [0170000, 0160000, "sub", "sd",0],
 [0070000, 0030000, "bit", "sd",1], [0070000, 0040000, "bic", "sd",1], [0070000, 0050000, "bis", "sd",1],
 [0177000, 0070000, "mul", "rd",0], [0177000, 0071000, "div", "rd",0], [0177000, 0072000, "ash", "rd",0],
 [0177000, 0073000, "ashc","rd",0], [0177000, 0074000, "xor", "rd",0], [0177400, 0000400, "br",  "o", 0], [0177400, 0001000, "bne", "o", 0],
 [0177400, 0001400, "beq", "o", 0], [0177400, 0100000, "bpl", "o", 0], [0177400, 0100400, "bmi", "o", 0],
 [0177400, 0101000, "bhi", "o", 0], [0177400, 0101400, "blos","o", 0], [0177400, 0102000, "bvc", "o", 0],
 [0177400, 0102400, "bvs", "o", 0], [0177400, 0103000, "bcc", "o", 0], [0177400, 0103400, "bcs", "o", 0],
 [0177400, 0002000, "bge", "o", 0], [0177400, 0002400, "blt", "o", 0], [0177400, 0003000, "bgt", "o", 0],
 [0177400, 0003400, "ble", "o", 0], [0177700, 0000100, "jmp", "d", 0], [0177000, 0004000, "jsr", "rd",0],
 [0177770, 0000200, "rts", "r", 0], [0177777, 0006400, "mark", "", 0], [0177000, 0077000, "sob", "ro",0],
 [0177777, 0000005, "reset","", 0], [0177700, 0006500, "mfpi","d", 0], [0177700, 0006600, "mtpi", "d",0],
 [0177777, 0000001, "wait", "", 0], [0177777, 0000002, "rti",  "", 0], [0177777, 0000006, "rtt", "",  0],
 [0177400, 0104000, "emt", "n", 0], [0177400, 0104400, "trap","n", 0], [0177777, 0000003, "bpt", "",  0],
 [0177777, 0000004, "iot", "",  0]]

function adr(m,a){
 if((m&7)==7){
  switch(m){
  case 027:a[0]+=2;return"#" +M[a[0]>>1].toString(8);
  case 037:a[0]+=2;return"*" +M[a[0]>>1].toString(8);
  case 067:a[0]+=2;return"*" +((a[0]+2+M[a[0]>>1])&0xffff).toString(8);
  case 077:a[0]+=2;return"**"+((a[0]+2+M[a[0]>>1])&0xffff).toString(8);
 }}
 let r=rs[m&7]
 switch(m&070){
 case 000:return      r
 case 010:return  "("+r+")"
 case 020:return  "("+r+")+"
 case 030:return "*("+r+")+"
 case 040:return "-("+r+")"
 case 050:return"*-("+r+")"
 case 060:a[0]+=2;return    M[a[0]>>1].toString(8)+"("+r+")"
 case 070:a[0]+=2;return"*"+M[a[0]>>1].toString(8)+"("+r+")"
}}

function disas(a,aa){
 let i,l,r,s,d,o,x=M[a>>1]
 for(i=0;i<dtab.length;i++){l=dtab[i];if((x&l[0])==l[1]){r=l[2]+" ";break}}
 if(r==undefined)return"???"
 if(l[4]&&x&0100000)r+="B"
 s=(x&07700)>>6;d=x&077;o=x&0377
 switch(l[3]){
 case"sd":r+=adr(s,aa)+","
 case"d" :r+=adr(d,aa);break
 case"ro":r+=rs[(x&0700)>>6]+",";o&=077
 case"o" :if(o&0x80){r+=" -"+(2*((0xff^o)+1)).toString(8)}else{r+=" +"+(2*o).toString(8)};break
 case"rd":r+=adr(d,aa)+","+rs[(x&0700)>>6];break
 case"r" :r+=rs[x&7];break
 case"r3":r+=rs[(x&0700)>>6];break}
 return   r
}
function disasm(pc,O){let o=x=>{let r=x.toString(8);return"000000".slice(0,6-r.length)+r}
 do{ let id=pc.toString(8)
  let p=[pc],q=M[pc>>1]
  O(o(pc)+": "+o(q)+" [000000 000000 000000 000000][000000 000000 000000 000000 ----] "+disas(pc,p)+"\n",id)
  pc=p[0];pc+=2
  if((q==0104)&&(!test))break
 }while(M[pc>>1])}



//extract from:pdp11.aiju.de disasm.js (mit)
