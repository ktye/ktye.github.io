b: better c


types ijefz(scalar) BGHSIEJFZ(vector)
size  23234         001122334
vectors are stored as j(64-bit int) as (count,addr)


g:0              /global
0:"alpha"        /data
10:fefefe        /data
f:i:ii{x+y}      /func
g:i:ii{[a;b]a+b} /explicit arg names
h:i:ii           /import
0:[f g h]        /call table

autoloop:
 f:i:I{r:0;r+:x;r}
is the same as
 f:i:I{r:0;i:0;n:#x;while i<x{r+:x[i]};r}
autoloops use locals i and n. e.g. iota:
 iota:I:I{i:0;x:i;x}



:x                /return
if    cnd{..}     /if..then
if    cnd{..}{..} /if..then..else
while cnd{..}
$[a;b;c..]        /cond if a->b else if c->d .. otherwise->last
?[i;a;b;c]        /switch/jump i=0->a i=2->b .. otherwise->last
i?[x;y;..]        /indirect call: rtyp?[func table index;args..]
t?..              /type cast

if/while are statements, cond/switch expressions (all branches must have same type)

allocations
n#i n#j ..  (allocates and fill using external alloc:i:i)
n#I n_I ..  (returns adjusted pointer/length but does not change underlying memory)
