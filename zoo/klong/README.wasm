CHANGES

- s9core.h: add wasm.h; undef unix because we don't read headers.
	62a63,67
	> #ifdef wasm
	>  #undef unix
	>  #include "wasm.h"
	> #endif
	> 

- s9core.c: wasm.h defines FILE is int, input port is always open.
	251a252,254
	> #ifdef wasm
	> 	return (Input_port == 0) || (Ports[Input_port] != NULL);
	> #else
	252a256
	> #endif

- kg.c:
	- split interpret into while(rep())
	- the new function rep() is called by wasm
	- ifdef wasm/ifndef wasm:
		- don't load time.h, signal.h
		- no srand
		- no readopts
	- pair ifdef SAFE with else to disable the dead branch
	- use kginit instead of main

- Makefile: new entry: kg.wasm
  all non-exported functions need to be defined in wasm and imported
  Use wabt (github.com/WebAssembly/wabt): wasm2wat kg.wasm > kg.wat
  to inspect imports (close to the header) and exports (at the end).

	32a33,35
	> kg.wasm:	s9core.c s9core.h wasm.c wasm.h kg.c
	> 	clang -Dwasm -Wfatal-errors -Wno-builtin-requires-header -Oz --target=wasm32 -mbulk-memory --no-standard-libraries -Wl,--export=__heap_base,--export=kginit,--export=rep,--allow-undefined -Wl,--no-entry -o kg.wasm s9core.c wasm.c kg.c
	> 


- wasm.c are some stdlib replacements

- remaining functions are implemented in js

- js module is ../klong.js used by ../index.html
  It uses two imports:
  - ../fs.js virtual file system, share by all interpreters
  - ../ma.js malloc replacement (bucket allocator)

STATUS:
	- kginit(1) loads klong.image but fails with wrong file size
	- .l("test.kg") fails at 758 (bisecting with .x(0))
	  but the test run on their own, so probably unrelated
